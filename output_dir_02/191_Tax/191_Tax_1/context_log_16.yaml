- content: 'You are a spreadsheet agent who can find proper action APIs from the API
    document based on the language instructions.


    Requirements:

    1. The user will show you the headers and row numbers of sheets for you reference.

    2. Please provide step-by-step solutions with explanations.

    3. You can only be allowed to use the action APIs listed above. You cannot use
    any other APIs. Do not generate any new action APIs.

    4. It should only return one step at a time and each step should only contain
    one action API.

    5. Please add @ both before and after each API call to indicate that the content
    between the two @ characters is one API call, like @Write()@, and @AutoFill()@.

    6. The address of a range must contain the sheet name, due to that there may be
    multiple sheets in a workbook.

    7. You can only call the action APIs and directly use the values in the sheet.
    You cannot use any other variables.

    '
  role: system
- content: 'Instruction: In column D, calculate the profit for each week. Then format
    the numbers with Accounting Number Format.

    Sheet state: Sheet "Sheet1" (active) has 3 columns (Headers are A: "Week", B:
    "Sales", C: "COGS") and 11 rows (the row 1 is the header row).

    Please provide the first step and add @ both before and after the API call in
    the generated step. Do select an API from the API document. Keep concise and do
    not present explanations.

    '
  role: user
- content: 'Step 1. Create a new column D.

    Action API: @Write(range="Sheet1!D1", value="Profit")@

    '
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 4 columns (Headers are A: "Week", B: "Sales",
    C: "COGS", D: "Profit") and 11 rows (the row 1 is the header row).

    If task is not finished, please provide the next step; otherwise, please type
    "Done!". Do select an API from the API document. Keep concise and do not present
    explanations.

    '
  role: user
- content: 'Step 2. Profit is sales minus COGS.

    Action API: @Write(range="Sheet1!D2", value="=B2-C2")@

    '
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 4 columns (Headers are A: "Week", B: "Sales",
    C: "COGS", D: "Profit") and 11 rows (the row 1 is the header row).

    If task is not finished, please provide the next step; otherwise, please type
    "Done!". Do select an API from the API document. Keep concise and do not present
    explanations.

    '
  role: user
- content: 'Step 3. Fill other rows.

    Action API: @AutoFill(source="Sheet1!D2", destination="Sheet1!D2:D11")@

    '
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 4 columns (Headers are A: "Week", B: "Sales",
    C: "COGS", D: "Profit") and 11 rows (the row 1 is the header row).

    If task is not finished, please provide the next step; otherwise, please type
    "Done!". Do select an API from the API document. Keep concise and do not present
    explanations.

    '
  role: user
- content: 'Step 4. Change the format of the results as these are accounting values.

    Action API: @SetDataType(source="Sheet1!D2:D11", dataType="currency")@

    '
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 4 columns (Headers are A: "Week", B: "Sales",
    C: "COGS", D: "Profit") and 11 rows (the row 1 is the header row).

    If task is not finished, please provide the next step; otherwise, please type
    "Done!". Do select an API from the API document. Keep concise and do not present
    explanations.

    '
  role: user
- content: 'Done!

    '
  role: assistant
- content: 'My workbook records the weekly sales of my company and is used to compute
    taxes. The necessary formulas are as follows: Profit Before Tax = Sales - Total
    Expenses Before Tax; Tax Expense = Profit Before Tax * Tax Rate.

    Instruction: Fill in the columns D and E using the given formulas (the tax rate
    is 22.50%). Next plot a line chart displaying the sales and profits before tax
    against the Week. Display the legends at the bottom.

    Sheet state: Sheet "Sheet1" has 5 columns (Headers are A: "Week", B: "Sales",
    C: "Total Expenses Before Tax", D: "Profit Before Tax", E: "Tax Expense") and
    11 rows (1 header row and 10 data rows).

    Please provide the first step and add @ both before and after the API call in
    the generated step. Do select an API from the API document. Keep concise and do
    not present explanations.

    '
  role: user
- content: 'Step 1. Write the formula for Profit Before Tax in column D.

    Action API: @Write(range="Sheet1!D2", value="=B2-C2")@'
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 5 columns (Headers are A: "Week", B: "Sales",
    C: "Total Expenses Before Tax", D: "Profit Before Tax", E: "Tax Expense") and
    11 rows (1 header row and 10 data rows).

    If task is not finished, please provide the next step (add @ both before and after
    each API call, like "Action API: @Write(range=..., value=...)@"); otherwise, please
    type "Done!". Do select an API from the API document. Keep concise and do not
    present explanations.

    '
  role: user
- content: 'Step 2. Fill the Profit Before Tax formula down the column.

    Action API: @AutoFill(source="Sheet1!D2", destination="Sheet1!D2:D11")@'
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 5 columns (Headers are A: "Week", B: "Sales",
    C: "Total Expenses Before Tax", D: "Profit Before Tax", E: "Tax Expense") and
    11 rows (1 header row and 10 data rows).

    If task is not finished, please provide the next step (add @ both before and after
    each API call, like "Action API: @Write(range=..., value=...)@"); otherwise, please
    type "Done!". Do select an API from the API document. Keep concise and do not
    present explanations.

    '
  role: user
- content: 'Step 3. Write the formula for Tax Expense in column E.

    Action API: @Write(range="Sheet1!E2", value="=D2*0.225")@'
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 5 columns (Headers are A: "Week", B: "Sales",
    C: "Total Expenses Before Tax", D: "Profit Before Tax", E: "Tax Expense") and
    11 rows (1 header row and 10 data rows).

    If task is not finished, please provide the next step (add @ both before and after
    each API call, like "Action API: @Write(range=..., value=...)@"); otherwise, please
    type "Done!". Do select an API from the API document. Keep concise and do not
    present explanations.

    '
  role: user
- content: 'Step 4. Fill the Tax Expense formula down the column.

    Action API: @AutoFill(source="Sheet1!E2", destination="Sheet1!E2:E11")@'
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 5 columns (Headers are A: "Week", B: "Sales",
    C: "Total Expenses Before Tax", D: "Profit Before Tax", E: "Tax Expense") and
    11 rows (1 header row and 10 data rows).

    If task is not finished, please provide the next step (add @ both before and after
    each API call, like "Action API: @Write(range=..., value=...)@"); otherwise, please
    type "Done!". Do select an API from the API document. Keep concise and do not
    present explanations.

    '
  role: user
- content: 'Step 5. Create a line chart for Sales and Profit Before Tax.

    Action API: @CreateChart(source="Sheet1!A1:D11", destSheet="Sheet1", chartType="Line",
    chartName="Sales and Profit Chart", XField=1, YField=[2,4])@'
  role: assistant
- content: 'There is no API: SetChartLegendPosition

    . You can only choose from the following APIs:

    Write CopyPaste CutPaste SetHyperlink RemoveHyperlink AutoFill Sort Filter DeleteFilter
    MoveRow MoveColumn RemoveDuplicate SetFormat DeleteFormat SetDataType SetCellMerge
    Delete Clear InsertRow InsertColumn AutoFit ResizeRowColumn SetConditionalFormat
    SetDataValidation SetCellLock FreezePanes UnfreezePanes CreateChart SetChartTrendline
    SetChartTitle SetChartHasAxis SetChartAxis SetChartHasLegend SetChartLegend SetChartType
    AddChartErrorBars RemoveChartErrorBars AddDataLabels RemoveDataLabels SetChartMarker
    CreatePivotTable CreateChartFromPivotTable CreateSheet RemoveSheet

    Please regenerate this step.'
  role: user
- content: 'Step 6. Set the legend position for the chart at the bottom.

    Action API: @SetChartHasLegend(chartName="Sales and Profit Chart", hasLegend=True)@'
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 5 columns (Headers are A: "Week", B: "Sales",
    C: "Total Expenses Before Tax", D: "Profit Before Tax", E: "Tax Expense") and
    11 rows (1 header row and 10 data rows) and this sheet has the charts whose names
    are "Sales and Profit Chart".

    If task is not finished, please provide the next step (add @ both before and after
    each API call, like "Action API: @Write(range=..., value=...)@"); otherwise, please
    type "Done!". Do select an API from the API document. Keep concise and do not
    present explanations.

    '
  role: user
- content: 'Step 7. Set the legend position for the chart at the bottom.

    Action API: @SetChartLegend(chartName="Sales and Profit Chart", position="bottom")@'
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 5 columns (Headers are A: "Week", B: "Sales",
    C: "Total Expenses Before Tax", D: "Profit Before Tax", E: "Tax Expense") and
    11 rows (1 header row and 10 data rows) and this sheet has the charts whose names
    are "Sales and Profit Chart".

    If task is not finished, please provide the next step (add @ both before and after
    each API call, like "Action API: @Write(range=..., value=...)@"); otherwise, please
    type "Done!". Do select an API from the API document. Keep concise and do not
    present explanations.

    '
  role: user
- content: Done!
  role: assistant
