- content: 'You are a spreadsheet agent who can find proper action APIs from the API
    document based on the language instructions.


    Requirements:

    1. The user will show you the headers and row numbers of sheets for you reference.

    2. Please provide step-by-step solutions with explanations.

    3. You can only be allowed to use the action APIs listed above. You cannot use
    any other APIs. Do not generate any new action APIs.

    4. It should only return one step at a time and each step should only contain
    one action API.

    5. Please add @ both before and after each API call to indicate that the content
    between the two @ characters is one API call, like @Write()@, and @AutoFill()@.

    6. The address of a range must contain the sheet name, due to that there may be
    multiple sheets in a workbook.

    7. You can only call the action APIs and directly use the values in the sheet.
    You cannot use any other variables.

    '
  role: system
- content: 'Instruction: In column D, calculate the profit for each week. Then format
    the numbers with Accounting Number Format.

    Sheet state: Sheet "Sheet1" (active) has 3 columns (Headers are A: "Week", B:
    "Sales", C: "COGS") and 11 rows (the row 1 is the header row).

    Please provide the first step and add @ both before and after the API call in
    the generated step. Do select an API from the API document. Keep concise and do
    not present explanations.

    '
  role: user
- content: 'Step 1. Create a new column D.

    Action API: @Write(range="Sheet1!D1", value="Profit")@

    '
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 4 columns (Headers are A: "Week", B: "Sales",
    C: "COGS", D: "Profit") and 11 rows (the row 1 is the header row).

    If task is not finished, please provide the next step; otherwise, please type
    "Done!". Do select an API from the API document. Keep concise and do not present
    explanations.

    '
  role: user
- content: 'Step 2. Profit is sales minus COGS.

    Action API: @Write(range="Sheet1!D2", value="=B2-C2")@

    '
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 4 columns (Headers are A: "Week", B: "Sales",
    C: "COGS", D: "Profit") and 11 rows (the row 1 is the header row).

    If task is not finished, please provide the next step; otherwise, please type
    "Done!". Do select an API from the API document. Keep concise and do not present
    explanations.

    '
  role: user
- content: 'Step 3. Fill other rows.

    Action API: @AutoFill(source="Sheet1!D2", destination="Sheet1!D2:D11")@

    '
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 4 columns (Headers are A: "Week", B: "Sales",
    C: "COGS", D: "Profit") and 11 rows (the row 1 is the header row).

    If task is not finished, please provide the next step; otherwise, please type
    "Done!". Do select an API from the API document. Keep concise and do not present
    explanations.

    '
  role: user
- content: 'Step 4. Change the format of the results as these are accounting values.

    Action API: @SetDataType(source="Sheet1!D2:D11", dataType="currency")@

    '
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 4 columns (Headers are A: "Week", B: "Sales",
    C: "COGS", D: "Profit") and 11 rows (the row 1 is the header row).

    If task is not finished, please provide the next step; otherwise, please type
    "Done!". Do select an API from the API document. Keep concise and do not present
    explanations.

    '
  role: user
- content: 'Done!

    '
  role: assistant
- content: "My company needs to deliver the goods to customers by truck. My workbook\
    \ records the distances between my customers and four destinations. The per mile\
    \ shipping charge is $3.11 with a minimum charge of $75.\nInstruction: In a new\
    \ sheet with the same headers as in Sheet1, list only the customers who have a\
    \ distance of more than 700 miles to all four destinations, and sort them by their\
    \ distance to Seattle in descending order. \nSheet state: Sheet \"Sheet1\" has\
    \ 5 columns (Headers are A: \"Customers\", B: \"Seattle\", C: \"Milwaukee\", D:\
    \ \"Birmingham\", E: \"Oakland\") and 19 rows (1 header row and 18 data rows).\n\
    Please provide the first step and add @ both before and after the API call in\
    \ the generated step. Do select an API from the API document. Keep concise and\
    \ do not present explanations.\n"
  role: user
- content: 'Step 1. Begin by creating a new sheet to store the filtered customers.

    Action API: @CreateSheet(sheetName="FilteredCustomers")@'
  role: assistant
- content: 'Sheet state: Sheet "FilteredCustomers"  has no content. Sheet "Sheet1"
    has 5 columns (Headers are A: "Customers", B: "Seattle", C: "Milwaukee", D: "Birmingham",
    E: "Oakland") and 19 rows (1 header row and 18 data rows).

    If task is not finished, please provide the next step (add @ both before and after
    each API call, like "Action API: @Write(range=..., value=...)@"); otherwise, please
    type "Done!". Do select an API from the API document. Keep concise and do not
    present explanations.

    '
  role: user
- content: 'Step 2. Copy the headers from Sheet1 to the new sheet.

    Action API: @Write(range="FilteredCustomers!A1", value="Customers")@

    Action API: @Write(range="FilteredCustomers!B1", value="Seattle")@

    Action API: @Write(range="FilteredCustomers!C1", value="Milwaukee")@

    Action API: @Write(range="FilteredCustomers!D1", value="Birmingham")@

    Action API: @Write(range="FilteredCustomers!E1", value="Oakland")@'
  role: assistant
- content: 'Sheet state: Sheet "FilteredCustomers" has 5 columns (Headers are A: "Customers",
    B: "Seattle", C: "Milwaukee", D: "Birmingham", E: "Oakland") and 1 rows (1 header
    row and 0 data rows). Sheet "Sheet1" has 5 columns (Headers are A: "Customers",
    B: "Seattle", C: "Milwaukee", D: "Birmingham", E: "Oakland") and 19 rows (1 header
    row and 18 data rows).

    If task is not finished, please provide the next step (add @ both before and after
    each API call, like "Action API: @Write(range=..., value=...)@"); otherwise, please
    type "Done!". Do select an API from the API document. Keep concise and do not
    present explanations.

    '
  role: user
- content: 'Step 3. Filter the customers whose distance is more than 700 miles to
    all destinations.

    Action API: @Filter(source="Sheet1!A2:E19", fieldIndex=2, criteria=">700")@

    Action API: @Filter(source="Sheet1!A2:E19", fieldIndex=3, criteria=">700")@

    Action API: @Filter(source="Sheet1!A2:E19", fieldIndex=4, criteria=">700")@

    Action API: @Filter(source="Sheet1!A2:E19", fieldIndex=5, criteria=">700")@'
  role: assistant
- content: 'There is no API: CopyData

    . You can only choose from the following APIs:

    Write CopyPaste CutPaste SetHyperlink RemoveHyperlink AutoFill Sort Filter DeleteFilter
    MoveRow MoveColumn RemoveDuplicate SetFormat DeleteFormat SetDataType SetCellMerge
    Delete Clear InsertRow InsertColumn AutoFit ResizeRowColumn SetConditionalFormat
    SetDataValidation SetCellLock FreezePanes UnfreezePanes CreateChart SetChartTrendline
    SetChartTitle SetChartHasAxis SetChartAxis SetChartHasLegend SetChartLegend SetChartType
    AddChartErrorBars RemoveChartErrorBars AddDataLabels RemoveDataLabels SetChartMarker
    CreatePivotTable CreateChartFromPivotTable CreateSheet RemoveSheet

    Please regenerate this step.

    Here is the supplementary doc you can reference:

    Filter(source: str, fieldIndex: int, criteria: str)

    Args explanation:

    source (string): The range to filter.

    fieldIndex (int): The index of the field to filter by, starting from 1. For example,
    if the range is (A1:B6), and we want to filter by the first column (i.e. A column),
    then the fieldIndex is 1.

    criteria (string): The criteria to filter by.


    Usage example:

    # Example 1: Filter the range (A1:B6) in Sheet1 by the first column (i.e. A column)
    by the criteria ">=5".

    Filter(source="Sheet1!A1:B6", fieldIndex=1, criteria=">=5")

    # After implementing this action, the range (A1:B6) in Sheet1 will only contain
    the rows whose first column (i.e. A column) is greater than or equal to 5.


    Please use the above documents to generate the next step.

    '
  role: user
- content: 'Step 3. Filter the customers whose distance is more than 700 miles to
    all destinations.

    Action API: @Filter(source="Sheet1!A1:E19", fieldIndex=2, criteria=">700")@

    Action API: @Filter(source="Sheet1!A1:E19", fieldIndex=3, criteria=">700")@

    Action API: @Filter(source="Sheet1!A1:E19", fieldIndex=4, criteria=">700")@

    Action API: @Filter(source="Sheet1!A1:E19", fieldIndex=5, criteria=">700")@'
  role: assistant
