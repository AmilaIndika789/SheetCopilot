- content: 'You are a spreadsheet agent who can find proper action APIs from the API
    document based on the language instructions.


    Requirements:

    1. The user will show you the headers and row numbers of sheets for you reference.

    2. Please provide step-by-step solutions with explanations.

    3. You can only be allowed to use the action APIs listed above. You cannot use
    any other APIs. Do not generate any new action APIs.

    4. It should only return one step at a time and each step should only contain
    one action API.

    5. Please add @ both before and after each API call to indicate that the content
    between the two @ characters is one API call, like @Write()@, and @AutoFill()@.

    6. The address of a range must contain the sheet name, due to that there may be
    multiple sheets in a workbook.

    7. You can only call the action APIs and directly use the values in the sheet.
    You cannot use any other variables.

    '
  role: system
- content: 'Instruction: In column D, calculate the profit for each week. Then format
    the numbers with Accounting Number Format.

    Sheet state: Sheet "Sheet1" (active) has 3 columns (Headers are A: "Week", B:
    "Sales", C: "COGS") and 11 rows (the row 1 is the header row).

    Please provide the first step and add @ both before and after the API call in
    the generated step. Do select an API from the API document. Keep concise and do
    not present explanations.

    '
  role: user
- content: 'Step 1. Create a new column D.

    Action API: @Write(range="Sheet1!D1", value="Profit")@

    '
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 4 columns (Headers are A: "Week", B: "Sales",
    C: "COGS", D: "Profit") and 11 rows (the row 1 is the header row).

    If task is not finished, please provide the next step; otherwise, please type
    "Done!". Do select an API from the API document. Keep concise and do not present
    explanations.

    '
  role: user
- content: 'Step 2. Profit is sales minus COGS.

    Action API: @Write(range="Sheet1!D2", value="=B2-C2")@

    '
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 4 columns (Headers are A: "Week", B: "Sales",
    C: "COGS", D: "Profit") and 11 rows (the row 1 is the header row).

    If task is not finished, please provide the next step; otherwise, please type
    "Done!". Do select an API from the API document. Keep concise and do not present
    explanations.

    '
  role: user
- content: 'Step 3. Fill other rows.

    Action API: @AutoFill(source="Sheet1!D2", destination="Sheet1!D2:D11")@

    '
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 4 columns (Headers are A: "Week", B: "Sales",
    C: "COGS", D: "Profit") and 11 rows (the row 1 is the header row).

    If task is not finished, please provide the next step; otherwise, please type
    "Done!". Do select an API from the API document. Keep concise and do not present
    explanations.

    '
  role: user
- content: 'Step 4. Change the format of the results as these are accounting values.

    Action API: @SetDataType(source="Sheet1!D2:D11", dataType="currency")@

    '
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 4 columns (Headers are A: "Week", B: "Sales",
    C: "COGS", D: "Profit") and 11 rows (the row 1 is the header row).

    If task is not finished, please provide the next step; otherwise, please type
    "Done!". Do select an API from the API document. Keep concise and do not present
    explanations.

    '
  role: user
- content: 'Done!

    '
  role: assistant
- content: "My workbook records yearly accounting data of my company. The necessary\
    \ accounting formulas are as follows: Gross Profit = Net Sales \u2013 Cost of\
    \ Goods Sold (COGS); Net sales = Sales - Sales return - Discounts and allowances;\
    \ Cost of goods sold = Materials charges + Labor charges + Overhead; Gross profit\
    \ = Net sales - Cost of goods sold.\nInstruction: In a new column named \"Sales\
    \ Tax\" after the Sales column, calculate the taxes of the Sales using the tax\
    \ rate 20%.\nSheet state: Sheet \"Sheet1\" has 10 columns (Headers are A: \"Year\"\
    , B: \"Sales\", C: \"Sales Return\", D: \"Discounts and Allowances\", E: \"Net\
    \ Sales\", F: \"Materials Charges\", G: \"Labor Charges\", H: \"Overhead\", I:\
    \ \"Total Cost of Goods Sold\", J: \"Gross Profit\") and 10 rows (1 header row\
    \ and 9 data rows).\nPlease provide the first step and add @ both before and after\
    \ the API call in the generated step. Do select an API from the API document.\
    \ Keep concise and do not present explanations.\n\nHere is the supplementary doc\
    \ you can reference:\nInsertColumn(sheetName: str, beforeColumn: str = None, afterColumn:\
    \ str = None)\nArgs explanation:\nsheetName (string): The name of the sheet to\
    \ insert column.\nbeforeColumn (string): The column before which the new column\
    \ will be inserted.\nafterColumn (string): The column after which the new column\
    \ will be inserted.\n\nUsage example:\n# Example 1: Create a new column at Column\
    \ G in Sheet1, i.e, after Column F.\nInsertColumn(\"Sheet1\", afterColumn=\"F\"\
    )\n# The following call is equivalent.\nInsertColumn(\"Sheet1\", beforeColumn=\"\
    G\")\n# After implementing this action, a new column will be inserted at Column\
    \ G in Sheet1. The original Column G will become Column H.\n\nPlease use the above\
    \ documents to generate the next step.\n"
  role: user
- content: 'Step 1. Create a new column named "Sales Tax" after the Sales column.

    Action API: @InsertColumn(sheetName="Sheet1", afterColumn="B")@'
  role: assistant
