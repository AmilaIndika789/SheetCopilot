- content: 'You are a spreadsheet agent who can find proper action APIs from the API
    document based on the language instructions.


    Requirements:

    1. The user will show you the headers and row numbers of sheets for you reference.

    2. Please provide step-by-step solutions with explanations.

    3. You can only be allowed to use the action APIs listed above. You cannot use
    any other APIs. Do not generate any new action APIs.

    4. It should only return one step at a time and each step should only contain
    one action API.

    5. Please add @ both before and after each API call to indicate that the content
    between the two @ characters is one API call, like @Write()@, and @AutoFill()@.

    6. The address of a range must contain the sheet name, due to that there may be
    multiple sheets in a workbook.

    7. You can only call the action APIs and directly use the values in the sheet.
    You cannot use any other variables.

    '
  role: system
- content: 'Instruction: In column D, calculate the profit for each week. Then format
    the numbers with Accounting Number Format.

    Sheet state: Sheet "Sheet1" (active) has 3 columns (Headers are A: "Week", B:
    "Sales", C: "COGS") and 11 rows (the row 1 is the header row).

    Please provide the first step and add @ both before and after the API call in
    the generated step. Do select an API from the API document. Keep concise and do
    not present explanations.

    '
  role: user
- content: 'Step 1. Create a new column D.

    Action API: @Write(range="Sheet1!D1", value="Profit")@

    '
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 4 columns (Headers are A: "Week", B: "Sales",
    C: "COGS", D: "Profit") and 11 rows (the row 1 is the header row).

    If task is not finished, please provide the next step; otherwise, please type
    "Done!". Do select an API from the API document. Keep concise and do not present
    explanations.

    '
  role: user
- content: 'Step 2. Profit is sales minus COGS.

    Action API: @Write(range="Sheet1!D2", value="=B2-C2")@

    '
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 4 columns (Headers are A: "Week", B: "Sales",
    C: "COGS", D: "Profit") and 11 rows (the row 1 is the header row).

    If task is not finished, please provide the next step; otherwise, please type
    "Done!". Do select an API from the API document. Keep concise and do not present
    explanations.

    '
  role: user
- content: 'Step 3. Fill other rows.

    Action API: @AutoFill(source="Sheet1!D2", destination="Sheet1!D2:D11")@

    '
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 4 columns (Headers are A: "Week", B: "Sales",
    C: "COGS", D: "Profit") and 11 rows (the row 1 is the header row).

    If task is not finished, please provide the next step; otherwise, please type
    "Done!". Do select an API from the API document. Keep concise and do not present
    explanations.

    '
  role: user
- content: 'Step 4. Change the format of the results as these are accounting values.

    Action API: @SetDataType(source="Sheet1!D2:D11", dataType="currency")@

    '
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 4 columns (Headers are A: "Week", B: "Sales",
    C: "COGS", D: "Profit") and 11 rows (the row 1 is the header row).

    If task is not finished, please provide the next step; otherwise, please type
    "Done!". Do select an API from the API document. Keep concise and do not present
    explanations.

    '
  role: user
- content: 'Done!

    '
  role: assistant
- content: 'My workbook records weekly sales and COGS but the profit has not been
    calculated. The necessary formula is Profit = Sales - COGS.

    Instruction: Create a clustered column chart showing the Sales and COGS data for
    each week in a new sheet. Set the chart title as "Sales & COGS".

    Sheet state: Sheet "Sheet1" has 3 columns (Headers are A: "Week", B: "Sales",
    C: "COGS") and 11 rows (1 header row and 10 data rows).

    Please provide the first step and add @ both before and after the API call in
    the generated step. Do select an API from the API document. Keep concise and do
    not present explanations.

    '
  role: user
- content: 'Step 1. Create a new sheet for the chart.

    Action API: @CreateSheet(sheetName="Sales & COGS Chart")@'
  role: assistant
- content: 'Sheet state: Sheet "Sales & COGS Chart"  has no content. Sheet "Sheet1"
    has 3 columns (Headers are A: "Week", B: "Sales", C: "COGS") and 11 rows (1 header
    row and 10 data rows).

    If task is not finished, please provide the next step (add @ both before and after
    each API call, like "Action API: @Write(range=..., value=...)@"); otherwise, please
    type "Done!". Do select an API from the API document. Keep concise and do not
    present explanations.

    '
  role: user
- content: "Step 2. Write the Sales and COGS data into the new sheet for the chart.\n\
    Action API: @Write(range=\"Sales & COGS Chart!A1\", value=\"='Sheet1'!A1\")@ \
    \ \nAction API: @Write(range=\"Sales & COGS Chart!B1\", value=\"='Sheet1'!B1\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!C1\", value=\"='Sheet1'!C1\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!A2\", value=\"='Sheet1'!A2\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!B2\", value=\"='Sheet1'!B2\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!C2\", value=\"='Sheet1'!C2\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!A3\", value=\"='Sheet1'!A3\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!B3\", value=\"='Sheet1'!B3\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!C3\", value=\"='Sheet1'!C3\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!A4\", value=\"='Sheet1'!A4\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!B4\", value=\"='Sheet1'!B4\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!C4\", value=\"='Sheet1'!C4\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!A5\", value=\"='Sheet1'!A5\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!B5\", value=\"='Sheet1'!B5\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!C5\", value=\"='Sheet1'!C5\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!A6\", value=\"='Sheet1'!A6\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!B6\", value=\"='Sheet1'!B6\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!C6\", value=\"='Sheet1'!C6\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!A7\", value=\"='Sheet1'!A7\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!B7\", value=\"='Sheet1'!B7\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!C7\", value=\"='Sheet1'!C7\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!A8\", value=\"='Sheet1'!A8\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!B8\", value=\"='Sheet1'!B8\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!C8\", value=\"='Sheet1'!C8\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!A9\", value=\"='Sheet1'!A9\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!B9\", value=\"='Sheet1'!B9\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!C9\", value=\"='Sheet1'!C9\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!A10\", value=\"='Sheet1'!A10\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!B10\", value=\"='Sheet1'!B10\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!C10\", value=\"='Sheet1'!C10\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!A11\", value=\"='Sheet1'!A11\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!B11\", value=\"='Sheet1'!B11\"\
    )@  \nAction API: @Write(range=\"Sales & COGS Chart!C11\", value=\"='Sheet1'!C11\"\
    )@  "
  role: assistant
- content: 'Sheet state: Sheet "Sales & COGS Chart" has 3 columns (Headers are A:
    "Week", B: "Sales", C: "COGS") and 11 rows (1 header row and 10 data rows). Sheet
    "Sheet1" has 3 columns (Headers are A: "Week", B: "Sales", C: "COGS") and 11 rows
    (1 header row and 10 data rows).

    If task is not finished, please provide the next step (add @ both before and after
    each API call, like "Action API: @Write(range=..., value=...)@"); otherwise, please
    type "Done!". Do select an API from the API document. Keep concise and do not
    present explanations.

    '
  role: user
- content: 'Step 3. Create a clustered column chart for Sales and COGS data.

    Action API: @CreateChart(source="Sheet1!A1:C11", destSheet="Sales & COGS Chart",
    chartType="ColumnClustered", chartName="Sales & COGS")@'
  role: assistant
- content: 'Sheet state: Sheet "Sales & COGS Chart" has 3 columns (Headers are A:
    "Week", B: "Sales", C: "COGS") and 11 rows (1 header row and 10 data rows) and
    this sheet has the charts whose names are "Sales & COGS". Sheet "Sheet1" has 3
    columns (Headers are A: "Week", B: "Sales", C: "COGS") and 11 rows (1 header row
    and 10 data rows).

    If task is not finished, please provide the next step (add @ both before and after
    each API call, like "Action API: @Write(range=..., value=...)@"); otherwise, please
    type "Done!". Do select an API from the API document. Keep concise and do not
    present explanations.


    Here is the supplementary doc you can reference:

    SetChartTitle(chartName: str, title: str, fontSize: float = None, bold: bool =
    None, color: str = None)

    Args explanation:

    chartName (string): The name of the chart to set the title.

    title (string): The title for the chart.

    fontSize (float): The font size for the title.

    bold (bool): Whether to set bold. True means bold, False means not bold.

    color (string): The color for the title. It can be ''black'', ''white'', ''red'',
    ''green'', ''blue'', ''yellow'', ''magenta'', ''cyan'', ''dark_red'', ''dark_green''.


    Usage example:

    None

    Please use the above documents to generate the next step.

    '
  role: user
- content: 'Step 4. Set the chart title as "Sales & COGS".

    Action API: @SetChartTitle(chartName="Sales & COGS", title="Sales & COGS", fontSize=12,
    bold=True, color="black")@'
  role: assistant
