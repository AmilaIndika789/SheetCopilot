- content: 'You are a spreadsheet agent who can find proper action APIs from the API
    document based on the language instructions.


    Requirements:

    1. The user will show you the headers and row numbers of sheets for you reference.

    2. Please provide step-by-step solutions with explanations.

    3. You can only be allowed to use the action APIs listed above. You cannot use
    any other APIs. Do not generate any new action APIs.

    4. It should only return one step at a time and each step should only contain
    one action API.

    5. Please add @ both before and after each API call to indicate that the content
    between the two @ characters is one API call, like @Write()@, and @AutoFill()@.

    6. The address of a range must contain the sheet name, due to that there may be
    multiple sheets in a workbook.

    7. You can only call the action APIs and directly use the values in the sheet.
    You cannot use any other variables.

    '
  role: system
- content: 'Instruction: In column D, calculate the profit for each week. Then format
    the numbers with Accounting Number Format.

    Sheet state: Sheet "Sheet1" (active) has 3 columns (Headers are A: "Week", B:
    "Sales", C: "COGS") and 11 rows (the row 1 is the header row).

    Please provide the first step and add @ both before and after the API call in
    the generated step. Do select an API from the API document. Keep concise and do
    not present explanations.

    '
  role: user
- content: 'Step 1. Create a new column D.

    Action API: @Write(range="Sheet1!D1", value="Profit")@

    '
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 4 columns (Headers are A: "Week", B: "Sales",
    C: "COGS", D: "Profit") and 11 rows (the row 1 is the header row).

    If task is not finished, please provide the next step; otherwise, please type
    "Done!". Do select an API from the API document. Keep concise and do not present
    explanations.

    '
  role: user
- content: 'Step 2. Profit is sales minus COGS.

    Action API: @Write(range="Sheet1!D2", value="=B2-C2")@

    '
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 4 columns (Headers are A: "Week", B: "Sales",
    C: "COGS", D: "Profit") and 11 rows (the row 1 is the header row).

    If task is not finished, please provide the next step; otherwise, please type
    "Done!". Do select an API from the API document. Keep concise and do not present
    explanations.

    '
  role: user
- content: 'Step 3. Fill other rows.

    Action API: @AutoFill(source="Sheet1!D2", destination="Sheet1!D2:D11")@

    '
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 4 columns (Headers are A: "Week", B: "Sales",
    C: "COGS", D: "Profit") and 11 rows (the row 1 is the header row).

    If task is not finished, please provide the next step; otherwise, please type
    "Done!". Do select an API from the API document. Keep concise and do not present
    explanations.

    '
  role: user
- content: 'Step 4. Change the format of the results as these are accounting values.

    Action API: @SetDataType(source="Sheet1!D2:D11", dataType="currency")@

    '
  role: assistant
- content: 'Sheet state: Sheet "Sheet1" has 4 columns (Headers are A: "Week", B: "Sales",
    C: "COGS", D: "Profit") and 11 rows (the row 1 is the header row).

    If task is not finished, please provide the next step; otherwise, please type
    "Done!". Do select an API from the API document. Keep concise and do not present
    explanations.

    '
  role: user
- content: 'Done!

    '
  role: assistant
- content: "There is no API: SetFillColor\n. You can only choose from the following\
    \ APIs:\nWrite CopyPaste CutPaste SetHyperlink RemoveHyperlink AutoFill Sort Filter\
    \ DeleteFilter MoveRow MoveColumn RemoveDuplicate SetFormat DeleteFormat SetDataType\
    \ SetCellMerge Delete Clear InsertRow InsertColumn AutoFit ResizeRowColumn SetConditionalFormat\
    \ SetDataValidation SetCellLock FreezePanes UnfreezePanes CreateChart SetChartTrendline\
    \ SetChartTitle SetChartHasAxis SetChartAxis SetChartHasLegend SetChartLegend\
    \ SetChartType AddChartErrorBars RemoveChartErrorBars AddDataLabels RemoveDataLabels\
    \ SetChartMarker CreatePivotTable CreateChartFromPivotTable CreateSheet RemoveSheet\n\
    Please regenerate this step.\nHere is the supplementary doc you can reference:\n\
    SetConditionalFormat(source: str, formula: str, bold: nool = None, color: str\
    \ = None, fillColor: str = None, italic: bool = None, underline: bool = None)\n\
    Args explanation:\nsource (string): The range to set conditional format.\nformula\
    \ (string): The Excel formula representing the condition. For example, \"=A1>B1\"\
    \ means highlight the first cell of the source range if the value in A1 is greater\
    \ than the value in B1.\nbold (bool): Whether to set bold. True means bold, False\
    \ means not bold.\ncolor (string): The color to set. It can be 'black', 'white',\
    \ 'red', 'green', 'blue', 'yellow', 'magenta', 'cyan', 'dark_red', 'dark_green'.\n\
    fillColor (string): The fill color to set. It can be 'black', 'white', 'red',\
    \ 'green', 'blue', 'yellow', 'magenta', 'cyan', 'dark_red', 'dark_green'.\nitalic\
    \ (bool): Whether to set italic. True means italic, False means not italic.\n\
    underline (bool): Whether to set underline. True means underline, False means\
    \ not underline.\n\nUsage example:\n# Example 1: Highlight cells A1 to A10 greater\
    \ than cell D1 with white text and red background.\nSetConditionalFormat(source='Sheet1!A1:A10',\
    \ formula='=$A1>$D$1', color=\"white\", fillColor=\"red\")\n# Absolute reference\
    \ is used for A1 because iteration is done for rows while the column is fixed.\
    \ Absolute reference is used for D1 because it is the only target to be compared\
    \ with.\n# After implementing this action, the cells in range A1:A10 whose values\
    \ >= D1 will have white texts and red fill.\n# Example 2: lf column D contains\
    \ the letter 'H' highlight the colum F cell texts in yellow. \nSetConditionalFormat(source='Sheet1!D2:D',\
    \ formula='=ISNUMBER(SEARCH(\"H\",$D2))', color=\"yellow\")\n# Absolute reference\
    \ is used for D2 because iteration is done for rows while the column is fixed.\
    \ source starts from D2 because the column header needs to be ignored.\n# Example\
    \ 3: Highlight the column B cells in Sheet1 between 2pm and 5pm in bold text.\
    \ If the time is formatted as Text, TIMEVALUE can be used to convert time to factions.\
    \ The following API call can be used in this case.\nSetConditionalFormat(source=\"\
    Sheet1!B2:B36\", formula='=AND(TIMEVALUE($B2)>=TIMEVALUE(\"14:00:00\"),TIMEVALUE($B2)<=TIMEVALUE(\"\
    17:00:00\"))', fillColor=\"yellow\")\n\nPlease use the above documents to generate\
    \ the next step.\n"
  role: user
- content: 'Step 4. Change the format of the results as these are accounting values.

    Action API: @SetDataType(source="Sheet1!D2:D11", dataType="currency")@'
  role: assistant
